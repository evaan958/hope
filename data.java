
public class data extends javax.swing.JFrame {

    /**
     * Creates new form data
     */
    
    gameGrid second;
    matrix first;
     
    int userData ;
    int countI ;
    int countW ;
    
    public data() {
        
        //Setting default values for the attributes
        this.countI = 1 ;
        this.countW = 1 ;
        
        second = new gameGrid (0,0,0,0,0);
        first = new matrix(0,0);
        initComponents();
    }
    public data(gameGrid gameGrid1) {
        second = gameGrid1 ;
        initComponents();
        
    }
    public data(matrix matrix1) {
        first = matrix1 ;
        initComponents();
        
    }

    
//Creatig a non empty constructor
    data(int ud, int i, int w){

        //giving specific property values for the robot
        this.userData = ud;
        this.countI = i;
        this.countW = w;   
        
    }
    
    public void outputSet (String outputText){
        output.setText(outputText);
        
    }
    
    public void inputSet (String inputText){  
        input.setText(inputText);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        output = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        dataButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        output.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        output.setText("jLabel1");

        input.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        dataButton.setText("Next");
        dataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(input)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 325, Short.MAX_VALUE)
                        .addComponent(dataButton))
                    .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(output)
                .addGap(18, 18, 18)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void setuserData(int ud){
        this.userData = ud;
        
    }
    void setcountW(int w){
        this.countW = w;
        
    }
    
    private void dataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataButtonActionPerformed
        
        //Parsing converting a string to an intergeer
        setuserData(Integer.parseInt(input.getText()));
        
        //Using of statemnets to run different code under different circumstances
        if(this.countI==1){
            
            //Calling a setter to set a value for one of the attributes
            first.setrowValue(this.userData);
            output.setText("Choose a number of columns");
            
        }else if (this.countI==2){
            first.setcolValue(this.userData);
            first.create();
            output.setText("Choose a number of organisms");
            
        }else if (this.countI==3){
            second.setnumValue(this.userData);
            output.setText("How many generations would you like to see?");
            
        }else if (this.countI==4){
            second.setgenValue(this.userData);
            output.setText("What is the row of organism "+ countW);
            
        }else if ((this.countI==5) || (this.countI>5 && this.countI%2!=0)){
            second.setrowUpdate(this.userData);
            output.setText("What is the column of organism "+ countW);
            setcountW(countW++);
            
        }else if ((this.countI==6) || (this.countI>6 && this.countI%2==0)){
            second.setcolUpdate(this.userData);
            output.setText("What is the row of organism "+ countW);
            
        }else if (this.countI>(4+(2*second.numValue))){
            this.setVisible(false);
            second.print();
            
        }
        
        
    }//GEN-LAST:event_dataButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new data().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dataButton;
    private javax.swing.JTextField input;
    private javax.swing.JLabel output;
    // End of variables declaration//GEN-END:variables


    
    



}
